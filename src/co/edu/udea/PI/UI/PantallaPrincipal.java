/*
* To change this license header, choose License Headers in Project Properties.
* To change this template file, choose Tools | Templates
* and open the template in the editor.
*/
package co.edu.udea.PI.UI;

import co.edu.udea.PI.logica.Axiomas;
import co.edu.udea.PI.logica.FBF;
import co.edu.udea.PI.logica.Hipotesis;
import co.edu.udea.PI.logica.Reglas;
import java.awt.Color;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;
import javax.swing.table.DefaultTableModel;


public class PantallaPrincipal extends javax.swing.JFrame {
    
    private String textFocus;
    private Hipotesis hipotesis;
    private int pasoDemostracion=0;
    private Axiomas axiomas;
    private Reglas reglas;
    private int numClicks=0;
    
    public PantallaPrincipal() throws Exception {
        initComponents();
        deshabilitarComponentes();
        axiomas = new Axiomas();
        reglas= new Reglas();
        
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        botonValidar = new javax.swing.JButton();
        textExpre1 = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        btnNegacion = new javax.swing.JButton();
        btnAbrePar = new javax.swing.JButton();
        btnCierraPar = new javax.swing.JButton();
        btnFlecha = new javax.swing.JButton();
        btnFlechaBi = new javax.swing.JButton();
        btnDisy = new javax.swing.JButton();
        btnConj = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaDemostracion = new javax.swing.JTable();
        comboRegla = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        textHip = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        botonFijar = new javax.swing.JButton();
        comboPremisas = new javax.swing.JComboBox();
        comboPaso = new javax.swing.JComboBox();
        comboPremisa = new javax.swing.JComboBox();
        botonAñadir = new javax.swing.JButton();
        text1 = new javax.swing.JTextField();
        botonReiniciar = new javax.swing.JButton();
        comboReglaSusti = new javax.swing.JComboBox();
        labelSust1 = new javax.swing.JLabel();
        textSust1 = new javax.swing.JTextField();
        labelSust2 = new javax.swing.JLabel();
        textSust2 = new javax.swing.JTextField();
        butonSustituir = new javax.swing.JButton();
        comboPaso1 = new javax.swing.JComboBox();
        botonComprobarDem = new javax.swing.JButton();

        jButton1.setText("jButton1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        botonValidar.setText("Validar");
        botonValidar.setFocusable(false);
        botonValidar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonValidarActionPerformed(evt);
            }
        });

        textExpre1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                textExpre1FocusGained(evt);
            }
        });
        textExpre1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textExpre1ActionPerformed(evt);
            }
        });

        jPanel1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        btnNegacion.setText("¬");
        btnNegacion.setFocusable(false);
        btnNegacion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNegacionActionPerformed(evt);
            }
        });

        btnAbrePar.setText("(");
        btnAbrePar.setFocusable(false);
        btnAbrePar.setMaximumSize(new java.awt.Dimension(22, 27));
        btnAbrePar.setMinimumSize(new java.awt.Dimension(22, 27));
        btnAbrePar.setPreferredSize(new java.awt.Dimension(22, 27));
        btnAbrePar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAbreParActionPerformed(evt);
            }
        });

        btnCierraPar.setText(")");
        btnCierraPar.setFocusable(false);
        btnCierraPar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCierraParActionPerformed(evt);
            }
        });

        btnFlecha.setText("→");
        btnFlecha.setFocusable(false);
        btnFlecha.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFlechaActionPerformed(evt);
            }
        });

        btnFlechaBi.setText("↔");
        btnFlechaBi.setFocusable(false);
        btnFlechaBi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFlechaBiActionPerformed(evt);
            }
        });

        btnDisy.setText("∨");
        btnDisy.setFocusable(false);
        btnDisy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDisyActionPerformed(evt);
            }
        });

        btnConj.setText("∧");
        btnConj.setFocusable(false);
        btnConj.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConjActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(btnNegacion, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnAbrePar, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnCierraPar, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnFlecha)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnFlechaBi)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnDisy)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnConj)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnNegacion)
                    .addComponent(btnAbrePar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnCierraPar)
                    .addComponent(btnFlecha)
                    .addComponent(btnFlechaBi)
                    .addComponent(btnDisy)
                    .addComponent(btnConj))
                .addContainerGap(14, Short.MAX_VALUE))
        );

        tablaDemostracion.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Paso", "Proposición a validar", "Justificacion"
            }
        ){

            @Override
            public boolean isCellEditable(int row, int column) {
                //all cells false
                return false;
            }
        });
        tablaDemostracion.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                tablaDemostracionFocusGained(evt);
            }
        });
        tablaDemostracion.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                tablaDemostracionMouseReleased(evt);
            }
        });
        jScrollPane1.setViewportView(tablaDemostracion);
        if (tablaDemostracion.getColumnModel().getColumnCount() > 0) {
            tablaDemostracion.getColumnModel().getColumn(0).setHeaderValue("Paso");
            tablaDemostracion.getColumnModel().getColumn(1).setResizable(false);
            tablaDemostracion.getColumnModel().getColumn(1).setHeaderValue("Proposición a validar");
            tablaDemostracion.getColumnModel().getColumn(2).setHeaderValue("Justificacion");
        }

        comboRegla.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Seleccione", "Premisa", "Sustitucion", "Modus Ponems", "Axioma 1", "Axioma 2", "Axioma 3", "Axioma 4", "Supuesto" }));
        comboRegla.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboReglaActionPerformed(evt);
            }
        });

        jLabel1.setText("Expresion");

        jLabel2.setText("Justificación");

        textHip.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textHipActionPerformed(evt);
            }
        });
        textHip.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                textHipFocusGained(evt);
            }
        });

        jLabel3.setText("Prueba deductiva");

        botonFijar.setText("Fijar");
        botonFijar.setFocusable(false);
        botonFijar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonFijarActionPerformed(evt);
            }
        });

        comboPremisas.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Seleccione" }));
        comboPremisas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboPremisasActionPerformed(evt);
            }
        });

        comboPaso.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Seleccione" }));
        comboPaso.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboPasoActionPerformed(evt);
            }
        });

        comboPremisa.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Premisa", "Conclusion" }));

        botonAñadir.setText("Añadir");
        botonAñadir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonAñadirActionPerformed(evt);
            }
        });

        text1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                text1ActionPerformed(evt);
            }
        });

        botonReiniciar.setText("Reiniciar");
        botonReiniciar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonReiniciarActionPerformed(evt);
            }
        });

        comboReglaSusti.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Seleccione", "RFP5", "RFP6", "RFP7" }));

        labelSust1.setText("A sustituir");

        textSust1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                textSust1FocusGained(evt);
            }
        });

        labelSust2.setText("Por");

        textSust2.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                textSust2FocusGained(evt);
            }
        });

        butonSustituir.setText("Sustituir");
        butonSustituir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butonSustituirActionPerformed(evt);
            }
        });

        comboPaso1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Seleccione" }));

        botonComprobarDem.setText("Comprobar demostración");
        botonComprobarDem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonComprobarDemActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(textHip, javax.swing.GroupLayout.PREFERRED_SIZE, 482, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(comboPremisa, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(botonAñadir, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(9, 9, 9))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(textExpre1)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(comboRegla, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(comboPremisas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(comboReglaSusti, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(comboPaso, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(comboPaso1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(botonValidar, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(text1, javax.swing.GroupLayout.PREFERRED_SIZE, 618, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(botonFijar, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(labelSust1)
                                    .addComponent(labelSust2))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(textSust2, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(textSust1, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(48, 48, 48)
                                        .addComponent(butonSustituir))))
                            .addComponent(jLabel1)
                            .addComponent(botonReiniciar)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 726, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(botonComprobarDem)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textHip, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(comboPremisa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(botonAñadir))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(text1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(botonFijar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(comboRegla, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(comboPremisas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(comboReglaSusti, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(comboPaso, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(comboPaso1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(botonValidar))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelSust1)
                    .addComponent(textSust1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(butonSustituir))
                .addGap(3, 3, 3)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelSust2)
                    .addComponent(textSust2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(textExpre1, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(botonComprobarDem)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(botonReiniciar))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    public void agregarOperandos(char c){
        int pos=0;
        String texto;
        if(this.getTextFocus().equals("textExpre1")){
            pos = textExpre1.getCaretPosition();
            texto = textExpre1.getText();
            texto = texto.substring(0, pos) + c + texto.substring(pos, texto.length());
            textExpre1.setText(texto);
            textExpre1.setCaretPosition(pos+1);
        } else if(this.getTextFocus().equals("textHip")){
            pos = textHip.getCaretPosition();
            texto = textHip.getText();
            texto = texto.substring(0, pos) + c + texto.substring(pos, texto.length());
            textHip.setText(texto);
            textHip.setCaretPosition(pos+1);
        } else if(this.getTextFocus().equals("textSust1")){
            pos = textSust1.getCaretPosition();
            texto = textSust1.getText();
            texto = texto.substring(0, pos) + c + texto.substring(pos, texto.length());
            textSust1.setText(texto);
            textSust1.setCaretPosition(pos+1);
        }else if(this.getTextFocus().equals("textSust2")){
            pos = textSust2.getCaretPosition();
            texto = textSust2.getText();
            texto = texto.substring(0, pos) + c + texto.substring(pos, texto.length());
            textSust2.setText(texto);
            textSust2.setCaretPosition(pos+1);
        }
    }
    
    public void deshabilitarComponentes(){
        this.textExpre1.setEnabled(false);
        this.comboPaso.setEnabled(false);
        this.comboPaso1.setEnabled(false);
        this.comboRegla.setEnabled(false);
        this.botonValidar.setEnabled(false);
        comboPremisas.setVisible(false);
        comboReglaSusti.setVisible(false);
        textSust1.setVisible(false);
        textSust2.setVisible(false);
        labelSust1.setVisible(false);
        labelSust2.setVisible(false);
        butonSustituir.setVisible(false);
        //
        btnAbrePar.setFocusable(false);
        btnCierraPar.setFocusable(false);
        btnConj.setFocusable(false);
        btnDisy.setFocusable(false);
        btnFlecha.setFocusable(false);
        btnFlechaBi.setFocusable(false);
        btnNegacion.setFocusable(false);
        botonValidar.setFocusable(false);
    }
    
    public void habilitarComponentes(){
        this.textHip.setEnabled(false);
        this.botonFijar.setEnabled(false);
        this.textExpre1.setEnabled(true);
        //this.comboPaso.setEnabled(true);
        this.comboRegla.setEnabled(true);
        this.botonValidar.setEnabled(true);
    }
    
    public void deshabilitarCombos(int caso){
        switch (caso){
            case 1: //Sust
                comboPremisas.setVisible(false);
                comboPaso.setVisible(true);
                comboPaso1.setVisible(false);
                comboReglaSusti.setVisible(true);
                textExpre1.setEnabled(false);
                botonValidar.setEnabled(false);
                textSust1.setVisible(true);
                textSust2.setVisible(true);
                labelSust1.setVisible(true);
                labelSust2.setVisible(true);
                butonSustituir.setVisible(true);
                break;
            case 2: //Premisa
                comboPremisas.setVisible(true);
                comboPaso.setVisible(false);
                comboPaso1.setVisible(false);
                comboReglaSusti.setVisible(false);
                textExpre1.setEnabled(true);
                botonValidar.setEnabled(true);
                textSust1.setVisible(false);
                textSust2.setVisible(false);
                labelSust1.setVisible(false);
                labelSust2.setVisible(false);
                butonSustituir.setVisible(false);
                break;
            case 3: //Axiomas
                comboPremisas.setVisible(false);
                comboPaso.setVisible(false);
                comboPaso1.setVisible(false);
                comboReglaSusti.setVisible(false);
                textExpre1.setEnabled(true);
                botonValidar.setEnabled(true);
                textSust1.setVisible(false);
                textSust2.setVisible(false);
                labelSust1.setVisible(false);
                labelSust2.setVisible(false);
                butonSustituir.setVisible(false);
                break;
            case 4: //Modus ponem
                comboPremisas.setVisible(false);
                comboPaso.setEnabled(true);
                comboPaso1.setEnabled(true);
                comboPaso.setVisible(true);
                comboPaso1.setVisible(true);
                comboReglaSusti.setVisible(false);
                textExpre1.setEnabled(false);
                botonValidar.setEnabled(true);
                textSust1.setVisible(false);
                textSust2.setVisible(false);
                labelSust1.setVisible(false);
                labelSust2.setVisible(false);
                butonSustituir.setVisible(false);
                break;
        }
    }
    
    public void agregarFBF(String expresion, String justificacion){
        setPasoDemostracion(getPasoDemostracion()+1);
        DefaultTableModel model = (DefaultTableModel) tablaDemostracion.getModel();
        model.addRow(new Object[]{pasoDemostracion,expresion , justificacion});
        comboPaso.addItem(pasoDemostracion);
    }
    
    private void botonValidarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonValidarActionPerformed
        boolean error=false;
        String expresion = textExpre1.getText();
        String justificacion= comboRegla.getSelectedItem().toString();
        
        
//        if (comboRegla.getSelectedItem().equals("Premisa") && comboPremisas.getSelectedItem().equals("Seleccione")) {
//            JOptionPane.showMessageDialog(this,"Seleccione la premisa");
//            error=true;
//            return;
//        } else if (comboRegla.getSelectedItem().equals("Seleccione")) {
//            JOptionPane.showMessageDialog(this,"Seleccione la justificación");
//            error=true;
//            return;
//        }else if(!comboRegla.getSelectedItem().equals("Premisa") && comboPaso.getSelectedItem().equals("Seleccione") &&
//                !comboRegla.getSelectedItem().toString().contains("Axionama")) {
//            JOptionPane.showMessageDialog(this,"Seleccione el paso");
//            error=true;
//            return;
//        }
        try {
            if(justificacion.contains("Modus Ponems"))expresion = "a";
                
            FBF f = new FBF(expresion);
            boolean v = true;
            
            if(comboRegla.getSelectedItem().toString().contains("Axioma")){
                String item = comboRegla.getSelectedItem().toString();
                
                switch(item){
                    case "Axioma 1":
                        v = axiomas.validar(1, f);
                        break;
                    case "Axioma 2":
                        v = axiomas.validar(2, f);
                        break;
                    case "Axioma 3":
                        v = axiomas.validar(3, f);
                        break;
                    case "Axioma 4":
                        v = axiomas.validar(4, f);
                        break;
                }
            }else if(comboRegla.getSelectedItem().toString().contains("Modus Ponems")){
                int paso1= Integer.parseInt(comboPaso.getSelectedItem().toString());
                int paso2= Integer.parseInt(comboPaso1.getSelectedItem().toString());
                String expresion1= tablaDemostracion.getValueAt(paso1-1, 1).toString();
                String expresion2= tablaDemostracion.getValueAt(paso2-1, 1).toString();
                String ponem= reglas.modusPonems(expresion1, expresion2);
                if(ponem!=null){
                    expresion= ponem;
                    justificacion= "Modus Ponems entre "+ paso1 + " y " + paso2;
                    //JOptionPane.showMessageDialog(this, "todo wipi");
                }else {
                    error=true;
                    JOptionPane.showMessageDialog(this, "No es posible realizar modus ponems entre los pasos seleccionados");
                }
            }
            
            if(!error){
                if(v){
                    textExpre1.setText("");
                    agregarFBF(expresion,justificacion);
                }else{
                    textExpre1.setBackground(Color.red);
                }
            }
            
            
            
        } catch (Exception e) {
            //e.printStackTrace();
            textExpre1.setBackground(Color.red);
        }
        this.comboPremisas.setVisible(false);
        this.comboRegla.setSelectedIndex(0);
        this.comboPaso.setSelectedIndex(0);
        this.comboPaso1.setSelectedIndex(0);
        comboPaso.setVisible(true);
        comboPaso1.setVisible(true);
        this.comboPremisas.setSelectedIndex(0);
        
    }//GEN-LAST:event_botonValidarActionPerformed

    private void btnNegacionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNegacionActionPerformed
        
        this.agregarOperandos('¬');
    }//GEN-LAST:event_btnNegacionActionPerformed

    private void btnAbreParActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAbreParActionPerformed
        
        this.agregarOperandos('(');
        
    }//GEN-LAST:event_btnAbreParActionPerformed

    private void btnCierraParActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCierraParActionPerformed
        
        this.agregarOperandos(')');
    }//GEN-LAST:event_btnCierraParActionPerformed

    private void btnFlechaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFlechaActionPerformed
        
        this.agregarOperandos('→');
    }//GEN-LAST:event_btnFlechaActionPerformed

    private void btnFlechaBiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFlechaBiActionPerformed
        
        this.agregarOperandos('↔');
    }//GEN-LAST:event_btnFlechaBiActionPerformed

    private void btnDisyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDisyActionPerformed
        
        this.agregarOperandos('∨');
    }//GEN-LAST:event_btnDisyActionPerformed

    private void btnConjActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConjActionPerformed
        
        this.agregarOperandos('∧');
    }//GEN-LAST:event_btnConjActionPerformed

    private void comboReglaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboReglaActionPerformed
        if (comboRegla.getSelectedItem().equals("Premisa")){
            deshabilitarCombos(2);
            
        } else if(comboRegla.getSelectedItem().toString().contains("Axioma")){
            deshabilitarCombos(3);
        }else if(comboRegla.getSelectedItem().toString().contains("Sustitucion")){
            deshabilitarCombos(1);
        }else if (comboRegla.getSelectedItem().equals("Modus Ponems")){
            deshabilitarCombos(4);
            comboPaso1.removeAllItems();
            for(int i=0; i<comboPaso.getItemCount(); i++){
                comboPaso1.addItem(comboPaso.getItemAt(i));
            }
        }
        
    }//GEN-LAST:event_comboReglaActionPerformed

    private void textExpre1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_textExpre1FocusGained
        this.setTextFocus("textExpre1");
    }//GEN-LAST:event_textExpre1FocusGained

    private void textHipFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_textHipFocusGained
        this.setTextFocus("textHip");
    }//GEN-LAST:event_textHipFocusGained

    private void botonFijarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonFijarActionPerformed
        String expresion = text1.getText();
        try {
            hipotesis = new Hipotesis(expresion);
            //FBF f  = new FBF(expresion);
            text1.setBackground(Color.GREEN);
            text1.setEnabled(false);
            habilitarComponentes();
            cargarAntecedentes();
        } catch (Exception e) {
            text1.setBackground(Color.red);
        }
    }//GEN-LAST:event_botonFijarActionPerformed

    private void comboPremisasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboPremisasActionPerformed
        if (!comboRegla.getSelectedItem().equals("Seleccione")){
            textExpre1.setText(comboPremisas.getSelectedItem().toString());
        }
    }//GEN-LAST:event_comboPremisasActionPerformed

    private void textHipActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textHipActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textHipActionPerformed

    private void tablaDemostracionMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaDemostracionMouseReleased
        
    }//GEN-LAST:event_tablaDemostracionMouseReleased

    private void tablaDemostracionFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tablaDemostracionFocusGained
//        int row = tablaDemostracion.getSelectionModel().getAnchorSelectionIndex();
//        int col = tablaDemostracion.getColumnModel().getSelectionModel().getAnchorSelectionIndex();
//        System.out.println("Selecciono row:" + row + " col:" + col + "value: "+tablaDemostracion.getValueAt(row, col));
    }//GEN-LAST:event_tablaDemostracionFocusGained

    private void botonAñadirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonAñadirActionPerformed
        String expresion = textHip.getText();
        String expresion2;
        try {
            FBF f  = new FBF(expresion);
            textHip.setBackground(Color.GREEN);
            expresion2= text1.getText();
            if(comboPremisa.getSelectedItem().equals("Premisa")){
                if(!expresion2.equals("")){
                    expresion2+= "," + textHip.getText();
                }else {
                    expresion2+= textHip.getText();
                }
            }else if(comboPremisa.getSelectedItem().equals("Conclusion")){
                String valor= text1.getText();
                if(valor.contains("⊢")){
                    String[] split = valor.split("⊢", 2);
                    if(!split[1].equals("")){
                        expresion2+= "," + textHip.getText();
                    }else {
                        expresion2+= textHip.getText();
                    }
                }else {
                    expresion2+= "⊢" + textHip.getText();
                    comboPremisa.setEnabled(false);
                    botonAñadir.setEnabled(false);
                }
            }
            text1.setText(expresion2);
        } catch (Exception e) {
            textHip.setBackground(Color.red);
        }
    }//GEN-LAST:event_botonAñadirActionPerformed

    private void botonReiniciarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonReiniciarActionPerformed
        PantallaPrincipal pantalla;
        try {
            pantalla = new PantallaPrincipal();
            pantalla.setVisible(true);
            this.dispose();
        } catch (Exception ex) {
            Logger.getLogger(PantallaPrincipal.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_botonReiniciarActionPerformed

    private void butonSustituirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butonSustituirActionPerformed
        boolean v;
        v= false;
        int paso= Integer.parseInt(comboPaso.getSelectedItem().toString());
        String expresion= tablaDemostracion.getValueAt(paso-1, 1).toString();
        String expresion2 = textSust1.getText();
        String expresion3 = textSust2.getText();
        if(!expresion.contains(expresion2)){
            JOptionPane.showMessageDialog(this, "La expresion no esta contenida en el paso seleccionado");
            return;
        }
        try {
            String item = comboReglaSusti.getSelectedItem().toString();
            FBF g = new FBF(expresion3);
            FBF f= new FBF(expresion2);
            
            switch (item) {
                case "RFP5":
                    v = reglas.validar(5, f, g);
                    break;
                case "RFP6":
                    v = reglas.validar(6, f, g);
                    break;
                case "RFP7":
                    v = reglas.validar(7, f, g);
                    break;
            }
        } catch (Exception ex) {
            Logger.getLogger(PantallaPrincipal.class.getName()).log(Level.SEVERE, null, ex);
        }
        if(v){
            expresion= expresion.replace(expresion2, expresion3);
            agregarFBF(expresion,"Sustitucion en el paso: " + paso +  "con la regla" + comboReglaSusti.getSelectedItem());
            
            textSust1.setBackground(Color.GREEN);
        } else {
            textSust1.setBackground(Color.RED);
        }
    }//GEN-LAST:event_butonSustituirActionPerformed

    private void text1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_text1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_text1ActionPerformed

    private void textExpre1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textExpre1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textExpre1ActionPerformed

    private void textSust1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_textSust1FocusGained
        this.setTextFocus("textSust1");
    }//GEN-LAST:event_textSust1FocusGained

    private void textSust2FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_textSust2FocusGained
        this.setTextFocus("textSust2");
    }//GEN-LAST:event_textSust2FocusGained

    private void botonComprobarDemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonComprobarDemActionPerformed
        try {
            int i =tablaDemostracion.getRowCount()-1;
            String expresion = tablaDemostracion.getValueAt(i, 1).toString();
            String tipoExpresion = tablaDemostracion.getValueAt(i, 2).toString();
            if(expresion.equals(hipotesis.getConse()) && !tipoExpresion.contains("Supuesto")){
            JOptionPane.showMessageDialog(this, "La demostracion se realizo correctamente");
            deshabilitarComponentes();            
            }else{
                JOptionPane.showMessageDialog(this, "La demostracion esta inconclusa");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "La demostracion esta inconclusa");
        }
// TODO add your handling code here:
        
        
        
    }//GEN-LAST:event_botonComprobarDemActionPerformed

    private void comboPasoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboPasoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_comboPasoActionPerformed
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
        * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
        */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PantallaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PantallaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PantallaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PantallaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new PantallaPrincipal().setVisible(true);
                } catch (Exception ex) {
                    Logger.getLogger(PantallaPrincipal.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botonAñadir;
    private javax.swing.JButton botonComprobarDem;
    private javax.swing.JButton botonFijar;
    private javax.swing.JButton botonReiniciar;
    private javax.swing.JButton botonValidar;
    private javax.swing.JButton btnAbrePar;
    private javax.swing.JButton btnCierraPar;
    private javax.swing.JButton btnConj;
    private javax.swing.JButton btnDisy;
    private javax.swing.JButton btnFlecha;
    private javax.swing.JButton btnFlechaBi;
    private javax.swing.JButton btnNegacion;
    private javax.swing.JButton butonSustituir;
    private javax.swing.JComboBox comboPaso;
    private javax.swing.JComboBox comboPaso1;
    private javax.swing.JComboBox comboPremisa;
    private javax.swing.JComboBox comboPremisas;
    private javax.swing.JComboBox comboRegla;
    private javax.swing.JComboBox comboReglaSusti;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel labelSust1;
    private javax.swing.JLabel labelSust2;
    private javax.swing.JTable tablaDemostracion;
    private javax.swing.JTextField text1;
    private javax.swing.JTextField textExpre1;
    private javax.swing.JTextField textHip;
    private javax.swing.JTextField textSust1;
    private javax.swing.JTextField textSust2;
    // End of variables declaration//GEN-END:variables
    
    /**
     * @return the textFocus
     */
    public String getTextFocus() {
        return textFocus;
    }
    
    /**
     * @param textFocus the textFocus to set
     */
    public void setTextFocus(String textFocus) {
        this.textFocus = textFocus;
    }
    
    /**
     * @return the hipotesis
     */
    public Hipotesis getHipotesis() {
        return hipotesis;
    }
    
    /**
     * @param hipotesis the hipotesis to set
     */
    public void setHipotesis(Hipotesis hipotesis) {
        this.hipotesis = hipotesis;
    }
    
    /**
     * @return the pasoDemostracion
     */
    public int getPasoDemostracion() {
        return pasoDemostracion;
    }
    
    /**
     * @param pasoDemostracion the pasoDemostracion to set
     */
    public void setPasoDemostracion(int pasoDemostracion) {
        this.pasoDemostracion = pasoDemostracion;
    }
    
    private void cargarAntecedentes() {
        ArrayList antecedentes= this.getHipotesis().getAntecedentes();
        //comboPremisas.addItem(new String("Seleccione"));
        for (int i = 0; i < antecedentes.size(); i++) {
            comboPremisas.addItem(antecedentes.get(i));
        }
    }
}
